nameOverride: CUSTOM_RELEASE_NAME

configMaps:
  -
    name: test
    labels:
      lemon: squiz
    namespace: nginx
    data:
      ez: pz
  -
    name: json-file
    data:
      file.json: {
        "arg": "value"
      }

deployment:
  replicas: 1
  strategy:
    type: "RollingUpdate"
    maxSurge: 1
    maxUnavailable: 1
    # maxSurge: 50%
    # maxUnavailable: 50%
  # initContainers have the same specs as containers
  containers:
    -
      name: container1
      image:
        repository: user/repo
        tag: 1.0.0
      ports:
        - name: http
          containerPort: 8080
      resources:
        requests:
          cpu: 50m
          memory: 128Mi
        limits:
          cpu: 100m
          memory: 256Mi
      env:
        - name: env1
          value: value1
        - name: env2
          value: value2
      envFromConfigmap:
        - configMapName: cfg-map
          envs:
            - name: cfgEnv1
              key: cfgKey1
            - name: cfgEnv2
              key: cfgKey2
      envFromSecret:
        - secretName: name-of-the-secret
          envs:
            - name: secretEnv1
              key: secretKey1
            - name: secretEnv2
              key: secretKey2
      volumeMounts:
        - name: secretFile
          mountPath: /var/lib/secret
        - name: app-pvc
          mountPath: /var/www/html/files
  volumes:
    - name: app-pvc
      type: pvc
      typeName: claimName
    - name: secretFile
      type: secret
      typeName: secretName
      # items:
      #   - key: secretKey
      #     mode: 0600
      #     path: /path/to/mount
    - name: cfg
      type: configMap
      typeName: configMapName
      # items:
      #   - key: cfgKey
      #     mode: 0600
      #     path: /path/to/mount

hpa:
  name: test
  scaleTargetRef:
    kind: Deployment
    name: target-name
  minReplicas: 1
  maxReplicas: 2
  targetCPU: 90
  targetMemory: 90

ingress:
  name: test
  hosts: 
    -
      host: sub1.domain.com
      paths:
        -
          path: /api
          pathType: Prefix
          serviceName: service
          servicePort: 80
    -
      host: sub2.domain.com
      paths:
        -
          path: /api
          pathType: Prefix
          serviceName: service
          servicePort: http 
  tls:
    secretName: secret

pvs:
  -
    name: pv
    storageClassName: manual
    accessModes:
      - ReadWriteMany
    hostPath: "/tmp"

pvcs:
  -
    name: pvc
    storageClassName: manual
    accessModes:
      - ReadWriteOnce
      - ReadWriteMany
    size: 1Gi

secrets:
  - 
    name: registry.org
    type: kubernetes.io/dockerconfigjson
    data:
      .dockerconfigjson: |
        {"auths":{"registry.org":{"auth":"<token>"}}}
  - 
    name: registry.org-token
    type: kubernetes.io/dockerconfigjson
    data:
      .dockerconfigjson: b64:<base64_encrypted_string>
  - 
    name: secret-file
    type: Opaque
    data:
      api.key: |-
        super-secret-key
  -
    name: test
    type: Opaque
    data:
      key: value
  -
    name: tls-secret
    type: kubernetes.io/tls
    data:
      tls.crt: b64:crt
      tls.key: b64:key

services:
  -
    name: nginx
    clusterIP: None
    type: LoadBalancer
    loadBalancerIp: 192.168.0.1/24
    loadBalancerSourceRanges:
      - 192.168.0.1/24
    externalTrafficPolicy: Local
    healthCheckNodePort: 1234
    externalIPs:
      - 192.168.0.1
    ports:
      -
        name: http
        protocol: TCP
        port: 80
        targetPort: 8080